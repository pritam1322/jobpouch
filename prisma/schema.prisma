// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement())
  email        String           @unique
  password     String?
  name         String?
  image        String?
  emailVerified DateTime? @map(name: "email_verified")
  applications JobApplication[] // Relation to JobApplication
  Account      Account[]

  @@map("candidates") // Maps this model to the 'candidates' table in the database
}

model JobApplication {
  id             Int      @id @default(autoincrement())
  candidateId    Int // Foreign key for the User
  jobTitle       String
  companyName    String
  status         String // e.g., Applied, Interviewing, Offer, etc.
  appliedDate    DateTime @default(now())
  referralPerson String?
  jobLink        String
  techguid       String?

  User User @relation(fields: [candidateId], references: [id]) // Relation to User model
}

model Account {
  id                String @id @default(uuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  userId            Int // Changed to Int to match User ID type
  user              User   @relation(fields: [userId], references: [id]) // Relation to User model

  @@unique([provider, providerAccountId]) // Composite key for provider and account ID
  @@index([userId])
}
